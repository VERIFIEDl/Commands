const BaseCommand = require('../../utils/structures/BaseCommand');
const Discord = require('discord.js')

module.exports = class UnmuteCommand extends BaseCommand {
  constructor() {
    super('unmute', 'moderation', []);
  }

  async run(client, message, args) {
    if (!message.member.hasPermission("MUTE_MEMBERS")) return message.channel.send('You do not have permission to use this command.');
    if (!message.guild.me.hasPermission("MUTE_MEMBERS")) return message.channel.send('I require \`MANAGE_ROLES\` permission to mute.');

    let reason = args.slice(1).join(" ");
    const mutRole = message.guild.roles.cache.get('813551872701890591')
    const memberRole = message.guild.roles.cache.get('813542902625337415')
    const mentionedMember = message.mentions.members.first() || message.guild.members.cache.get(args[0]);
    const muteEmbed = new Discord.MessageEmbed()
      .setTitle(`You have been muted in ${message.guild.name}`)
      .setDescription(`Reason for being unmuted $(reason)`)
      .setColor("#00000")
      .setTimestamp();

    if (!args[0]) return message.channel.send(`\`*unmute @member reason\``);
    if (!mentionedMember) return message.channel.send('The member stated is not in the server.');
    if (mentionedMember.user.id == message.author.id) return message.channel.send('You cannot mute yourself.');
    if (mentionedMember.user.id == client.user.id) return message.channel.send('You cannot unmute me with my own command.');
    if (!reason) reason = "No reason given"
    if (mentionedMember.roles.cache.has(memberRole.id)) return message.channel.send('This member is already unmuted,');
    if (message.member.roles.highest.postion <= mentionedMember.roles.highest.postion) return message.channel.send('You cannot mute someone with the same role as you.');

    await mentionedMember.send(unmuteEmbed).catch(err => console.log(err));
    await mentionedMember.roles.add(memberRole.id).catch(err => console.log(err).then(message.channel.send('There was an error removing the mute role.')));
    await mentionedMember.roles.remove(mutRole.id).catch(err => console.log(err).then(message.channel.send('There was an error giving the member role.')));  }
}
